@inherits LayoutComponentBase
@implements IAsyncDisposable

@inject Services.HubService hubService;
@inject IJSRuntime jsRuntime;

<div class="card card-size">
    <PageTitle>SignalR Chat</PageTitle>
    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <textarea @ref="TextAreaRef" class="text-area" readonly> @hubService.messages </textarea>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><span class="oi oi-comment-square"></span></span>
                    <input @bind-value="hubService.message" @bind-value:event="oninput" @onkeyup="HandleInput" class="form-control" placeholder="message">
                    <button class="btn btn-primary" @onclick="hubService.SendMessage" disabled="@(!hubService.IsConnected)">Enviar</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public ElementReference TextAreaRef;

    public async Task HandleInput(KeyboardEventArgs args)
    {
        if (args.Key.Equals("Enter"))
        {
            await hubService.SendMessage();
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (hubService.hubConnection != null)
        {
            await hubService.hubConnection.DisposeAsync();
        }
    }

    protected override void OnInitialized() {

        hubService.OnChange += () => StateHasChanged();
        hubService.hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            jsRuntime.InvokeVoidAsync("scrollToEnd", TextAreaRef);
        });
    }
}
